variables declaration -- > ${Varibale_name}
commands declaration  --> $(Command)

today=`date`  --> Bad-Practice  
today=$(date)


Data-Processing Commands:
-> column
-> cut
-> grep
-> find
-> awk
-> sed
-> sort
-> tr

Scripting -> Control Workflow Execution.

Wild Characters:  

*  - 0 or more characters
?  - exactly   characters

$a, $b

echo - print

$sum   --> Bad Practise
${sum} ---> Good Practise.


exit status:
------------
0    --> SUCCESS
1    --> ERROR
2

..


133...


--------------------------------------
column : Input Data -> Table Output
pre-requisite:
-> Delimiter.

root@workernode:~# cat /etc/passwd - Shows Exsting Users in Machine

sivakumar: x : 1000: 1000:Ubuntu:/home/sivakumar:/bin/bash
testuser1:x:1001:1001::/home/testuser1:/bin/bash
suma:x:1002:1002::/home/suma:/bin/bash
kesav:x:1003:1004::/home/kesav:/bin/bash
latha:x:1004:1005::/home/latha:/bin/bash
kiran:x:1005:1006::/home/kiran:/bin/bash

root@workernode:~# useradd -c "he is a testuser" -s /bin/sh testuser2
root@workernode:~# cat /etc/passwd | grep -i "testuser2"

testuser2:x:1006:1007:he is a testuser:/home/testuser2:/bin/sh



root@workernode:~# cat /etc/group -> Shows Existing Groups in Machine.
sivakumar:x:1000:
testuser1:x:1001:
suma:x:1002:
bigdata:x:1003:kesav,latha,kiran
kesav:x:1004:
latha:x:1005:
kiran:x:1006:

Here USERS -> Represents BOTH "HUMAN" & "Applications/services/process"

 259  groupadd bigdata
  260  useradd kesav
  261  useradd latha
  262  useradd kiran
  263  passwd kesav
  264  usermod -a -G bigdata kesav
  265  usermod -a -G bigdata latha
  266  usermod -a -G bigdata kiran
  267  cat /etc/passwd
  268  cat /etc/group

 

nobody           x  65534  65534  nobody                              /nonexistent          /usr/sbin/nologin
systemd-network  x  100    102    systemd Network Management,,,       /run/systemd/netif    /usr/sbin/nologin
systemd-resolve  x  101    103    systemd Resolver,,,                 /run/systemd/resolve  /usr/sbin/nologin   
syslog           x  102    106    					/home/syslog          /usr/sbin/nologin
messagebus       x  103    107                                        /nonexistent                        /usr/sbin/nologin
_apt             x  104    65534                                      /nonexistent                        /usr/sbin/nologin
lxd              x  105    65534  /var/lib/lxd/                       /bin/false
uuidd            x  106    110    /run/uuidd                          /usr/sbin/nologin

--> GREEDY Output....

root@workernode:~# 	column -t -s ":" -e -n /etc/passwd  --> Non-Greedy Output.

			column -ten -s ":" /etc/passwd


2) CUT -> Displays a table data with given Field Numbers.

Pre-requeiste:
-> Table Data   
-> delimiter  

 cat /etc/passwd
  293  cut -d ":" -f 7 /etc/passwd
  294  cut -d ":" -f 1,3,5,7 /etc/passwd
       cut -c 1-10 userlist2.txt



3) GREP - Search the Given "String/pattern/expression" for the specified file/data.

cat /etc/passwd | grep -i "TEST"   --> Bad-Practice

grep -i "TEST" /etc/passwd    --> Good-practice

grep <options> <SearchString> <filepath>  

root@workernode:~# 	grep -w -i "suma" /etc/passwd   --> Strict WORD Declaration-Search
suma:x:1002:1002::/home/suma:/bin/bash

root@workernode:~# 	grep -wi "suma" /etc/passwd
suma:x:1002:1002::/home/suma:/bin/bash



  367  grep -i "siva" -A 4 /etc/passwd
  368  grep -i "siva" -B 4 /etc/passwd
  369  ip addr
  370  ip addr show

 grep -winclr -A -B -C
 grep -i "siva" -C 2 /etc/passwd

Regular Expressions:
-------------------
grep -i "^user$" /etc/passwd

^ - Begginning
$ - End


Two type of Paths:

Relative path   -->  cd ../../puppet/code/env     (bad practice)
Absolute path   ---> cd etc/puppet/code/env/labs/opt/puppet.sh  (good Practice)



4) FIND  -> Identifies a File/Directory As per Given "Filename/directoryname"

find <path> <operator> 
-name:
------
find / -name "*user*"          --> Searches for Both "files & Directoreis"
find / -name "*user*" | wc -l

-type f (or) -type d:
---------------------
root@workernode:~# find / -type f -name "*user*" | wc -l
2992
root@workernode:~# find / -name "*user*" | wc -l
3380
root@workernode:~# find / -type d -name "*user*" | wc -l
123

-atime:
------
root@workernode:~# find / -atime -3    --> AccessTime is WITH-IN 3 DAYS   --> Read/Write/modify/Update
root@workernode:~# find / -atime +3     --> AccessTime is mORE 3 DAYS


-mtime:
------

root@workernode:~# find . -mtime -3
.
./.local
./.local/share
./.local/share/nano
./.local/share/nano/search_history
./parent
./parent/child
./.selected_editor
./usersumainfo.txt
./userslist.txt
./.bash_history
./.terraform.d
./.terraform.d/checkpoint_cache
./userlist2.txt


root@workernode:~# find . -name "user*" -mtime -3
./usersumainfo.txt
./userslist.txt
./userlist2.txt

root@workernode:~# find . -type f -name "user*" -mtime -3
./usersumainfo.txt
./userslist.txt
./userlist2.txt

root@workernode:~# find . -type d -name "user*" -mtime -3

root@workernode:~#



=> AWK -> aho,weinberger,Kerninghan

Most Powerful Command in LINUX.

-> Table data
-> delimiter

root@workernode:~# 		awk -F "," '{print}' emp.txt     (or)  cat emp.txt

1,1001,RAVI KUMAR,SYSTEM ANALYST,PERMENANT,21-12-2012,36000,12000,2560,8500,1876,WEST VIRGINIA,CANADA
2,8823,ALFRED PITCH,PROGRAM ANALYST,CONTRACT,13-02-2012,56240,12000,3345,12000,,4533,SANFRANSISCO,UNITED STATES
3,7766,SURESH CHANDRA,SENIOR TEST ENGINEER,PERMENANT,12-06-2017,26000,8500,2345,5644,,CHENNAI,INDIA
4,3344,SOMESH GUPTA,ASSOCIATE ENGINEER,PERMENANT,14-09-2018,18000,6000,1800,4500,,BANGALORE,INDIA
5,8923,HIMANSHU,ASSOCIATE DEVELOPER,CONTRACT,12-7-2016,18000,6000,1800,,,MUMBAI,INDIA



root@workernode:~# 	awk -F "," '{print $1, "<==>", $2, "<==>", $3}' emp.txt
1 <==> 1001 <==> RAVI KUMAR
2 <==> 8823 <==> ALFRED PITCH
3 <==> 7766 <==> SURESH CHANDRA
4 <==> 3344 <==> SOMESH GUPTA
5 <==> 8923 <==> HIMANSHU
6 <==> 3333 <==> CUBA THOMSON


Built - in Identifiers in AWK

NR     --> Record Number
NF     --> No.of Fileds in 1 Record
OFS    --> Stands for "Output Field Separator"

root@workernode:~# history | tail -5
  425  awk -F "," '{print NR, $2, $3}' emp.txt
  426  awk -F "," 'NR>=10 && NR<=15 {print NR, $0}' emp.txt
  427  awk -F "," 'NR>=10 || NR<=15 {print NR, $0}' emp.txt
  428  awk -F "," 'NR>=10 {print NR, $0}' emp.txt

root@workernode:~# awk 'NR<=5{print NF, $0}' emp.txt    --> Default Delimiter "SPACE" is Considered to Count the fields in a record.

4 1,1001,RAVI KUMAR,SYSTEM ANALYST,PERMENANT,21-12-2012,36000,12000,2560,8500,1876,WEST VIRGINIA,CANADA
4 2,8823,ALFRED PITCH,PROGRAM ANALYST,CONTRACT,13-02-2012,56240,12000,3345,12000,,4533,SANFRANSISCO,UNITED STATES
4 3,7766,SURESH CHANDRA,SENIOR TEST ENGINEER,PERMENANT,12-06-2017,26000,8500,2345,5644,,CHENNAI,INDIA
3 4,3344,SOMESH GUPTA,ASSOCIATE ENGINEER,PERMENANT,14-09-2018,18000,6000,1800,4500,,BANGALORE,INDIA
2 5,8923,HIMANSHU,ASSOCIATE DEVELOPER,CONTRACT,12-7-2016,18000,6000,1800,,,MUMBAI,INDIA


root@workernode:~# 	awk -F "," 'NF<=12{print}' emp.txt
18,5437,KESAV NAIDU,ASSOCIATE ENGINEER,CONTRACT,23-10-2017,32000,9870,1200,,MUMBAI,INDIA
root@workernode:~# 	awk -F "," 'NF<=12{print NF}' emp.txt
12
root@workernode:~# 	awk -F "," 'NF<=12{print NF, $0}' emp.txt   --> Best Practice
12 18,5437,KESAV NAIDU,ASSOCIATE ENGINEER,CONTRACT,23-10-2017,32000,9870,1200,,MUMBAI,INDIA

root@workernode:~# awk -F "," 'NF>=14{print NF, $0}' emp.txt
14 2,8823,ALFRED PITCH,PROGRAM ANALYST,CONTRACT,13-02-2012,56240,12000,3345,12000,,4533,SANFRANSISCO,UNITED STATES
14 19,9876,SOMIL GUPTA,ADVOCATE,CONTRACT,13-04-2014,70000,8900,7655,9800,,3500,MUMBAI,INDIA

awk -F "|" '{OFS="|~|"}{print $1,$2,$3,$4,$5,$6,$7,$8}' stud2.txt


awk -F "," '{OFS="|"}{print $1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11}' emp.txt


root@workernode:~# awk -F "," '$8~/35000/{print $0}' emp.txt

6,3333,CUBA THOMSON,VICE PRESIDENT,PERMENANT,01-02-2012,450000,35000,23949,18000,,SANFRANSISCO,UNITED STATES
8,2222,SIVAN AYYAN,VICE PRESIDENT,PERMENANT,01-02-2012,450000,35000,23949,18000,,WEST VIRGINIA,CANADA

root@workernode:~# awk -F "," '$4~/PRESIDENT/{print $0}' emp.txt

6,3333,CUBA THOMSON,VICE PRESIDENT,PERMENANT,01-02-2012,450000,35000,23949,18000,,SANFRANSISCO,UNITED STATES
7,1111,ERIC DAVDISON,PRESIDENT,PERMENANT,01-02-2012,500000,40000,24567,21898,,WEST VIRGINIA,CANADA
8,2222,SIVAN AYYAN,VICE PRESIDENT,PERMENANT,01-02-2012,450000,35000,23949,18000,,WEST VIRGINIA,CANADA

root@workernode:~# awk -F "," '{OFS="|"}NR<=15{print $1,$2,$3,$4,$5,$6}' emp.txt

1|1001|RAVI KUMAR|SYSTEM ANALYST|PERMENANT|21-12-2012
2|8823|ALFRED PITCH|PROGRAM ANALYST|CONTRACT|13-02-2012
3|7766|SURESH CHANDRA|SENIOR TEST ENGINEER|PERMENANT|12-06-2017
4|3344|SOMESH GUPTA|ASSOCIATE ENGINEER|PERMENANT|14-09-2018
5|8923|HIMANSHU|ASSOCIATE DEVELOPER|CONTRACT|12-7-2016
6|3333|CUBA THOMSON|VICE PRESIDENT|PERMENANT|01-02-2012
7|1111|ERIC DAVDISON|PRESIDENT|PERMENANT|01-02-2012
8|2222|SIVAN AYYAN|VICE PRESIDENT|PERMENANT|01-02-2012
9|1244|MURALI KRISHAN|CMO|PERMENANT|02-5-2015
10|3216|KOMAL|CTO|PERMENANT|11-11-2013
11|5674|DINESH KUMAR|CFO|PERMENANT|21-6-2016
12|4421|SARVANAN LAXMANAN|PROJECT MANAGER|CONTRACT|02-08-2012
13|2134|TANISHQ|MARKETING MANAGER|PERMENANT|02-01-2015
14|6789|MANISH SING|DEVELOPMENT HEAD|PERMENANT|03-01-2015
15|1002|NAGA SIVA KUMAR|PROJECT CONSULTANT|PERMENANT|06-06-2016



SED :
----    Stands for "Stream Editor".

  467  sed -n '5p' student.txt    
  468  sed -n '1,5p' student.txt
  469  sed -n '1~5p' student.txt


-i       --> Commit to Original file
-i.back  --> COmmit + Backup the Original file.

  481  sed -i.back '1d' stud3.txt --> Backup file Creted.

  482  cat stud3.txt
  483  ls
   stud3.txt.back    stud3.txt  

  484  cat stud3.txt.back
  485  sed -i '1,5d' stud3.txt  --> Bad practice --> No Backup here !!! DANGER....!!
  486  cat stud3.txt

^ - beginning
$ -end

root@workernode:~# sed '5i hello' student.txt
SID|NAME|DEPT|BRANCH|YEAR|CITY|PHNO|FEE
1|sasi kumar|BTech|CIVIL|2021|NELLORE|8873341123|35000
2|Kesav|BTech|ECE|2021|KOVUR|9988876245|25000
3|pawan kalyna|BTech|AIML II| |KAVALI| |60000
hello
4|ramu|BTech|EEE|2019|ONGOLE|8899773627|25000
5|kumar|BTech|MECH|2021|TIRUPATI| |40000
6|kalyan|BTech|MECH|2021|GUDUR|0861554332|40000
7|komali krisnan|BTech|AIML I| |BUCHI|887665432|55000
8|ravi|BTech|CSE|2021| |998776543|50000



root@workernode:~# sed -i  "4s/kalyna/kalyan/g" student.txt

root@workernode:~# cat student.txt
SID|NAME|DEPT|BRANCH|YEAR|CITY|PHNO|FEE
1|sasi kumar|BTech|CIVIL|2021|NELLORE|8873341123|35000
2|Kesav|BTech|ECE|2021|KOVUR|9988876245|25000
3|pawan kalyan|BTech|AIML II| |KAVALI| |60000
4|ramu|BTech|EEE|2019|ONGOLE|8899773627|25000
5|kumar|BTech|MECH|2021|TIRUPATI| |40000
6|kalyan|BTech|MECH|2021|GUDUR|0861554332|40000
7|komali krisnan|BTech|AIML I| |BUCHI|887665432|55000
8|ravi|BTech|CSE|2021| |998776543|50000


root@workernode:~# sed 's/kalyan/kalyani/g' student.txt

SID|NAME|DEPT|BRANCH|YEAR|CITY|PHNO|FEE
1|sasi kumar|BTech|CIVIL|2021|NELLORE|8873341123|35000
2|Kesav|BTech|ECE|2021|KOVUR|9988876245|25000
3|pawan kalyani|BTech|AIML II| |KAVALI| |60000
4|ramu|BTech|EEE|2019|ONGOLE|8899773627|25000
5|kumar|BTech|MECH|2021|TIRUPATI| |40000
6|kalyani|BTech|MECH|2021|GUDUR|0861554332|40000
7|komali krisnan|BTech|AIML I| |BUCHI|887665432|55000
8|ravi|BTech|CSE|2021| |998776543|50000


root@workernode:~# awk -F "," '$4~/PRESIDENT/{print $0}' emp.txt
6,3333,CUBA THOMSON,VICE PRESIDENT,PERMENANT,01-02-2012,450000,35000,23949,18000,,SANFRANSISCO,UNITED STATES
7,1111,ERIC DAVDISON,PRESIDENT,PERMENANT,01-02-2012,500000,40000,24567,21898,,WEST VIRGINIA,CANADA
8,2222,SIVAN AYYAN,VICE PRESIDENT,PERMENANT,01-02-2012,450000,35000,23949,18000,,WEST VIRGINIA,CANADA

root@workernode:~# sed -n '/PRESIDENT/p' emp.txt
6,3333,CUBA THOMSON,VICE PRESIDENT,PERMENANT,01-02-2012,450000,35000,23949,18000,,SANFRANSISCO,UNITED STATES
7,1111,ERIC DAVDISON,PRESIDENT,PERMENANT,01-02-2012,500000,40000,24567,21898,,WEST VIRGINIA,CANADA
8,2222,SIVAN AYYAN,VICE PRESIDENT,PERMENANT,01-02-2012,450000,35000,23949,18000,,WEST VIRGINIA,CANADA

root@workernode:~# grep -i "president" emp.txt
6,3333,CUBA THOMSON,VICE PRESIDENT,PERMENANT,01-02-2012,450000,35000,23949,18000,,SANFRANSISCO,UNITED STATES
7,1111,ERIC DAVDISON,PRESIDENT,PERMENANT,01-02-2012,500000,40000,24567,21898,,WEST VIRGINIA,CANADA
8,2222,SIVAN AYYAN,VICE PRESIDENT,PERMENANT,01-02-2012,450000,35000,23949,18000,,WEST VIRGINIA,CANADA


root@workernode:~# grep "PRESIDENT" emp.txt
6,3333,CUBA THOMSON,VICE PRESIDENT,PERMENANT,01-02-2012,450000,35000,23949,18000,,SANFRANSISCO,UNITED STATES
7,1111,ERIC DAVDISON,PRESIDENT,PERMENANT,01-02-2012,500000,40000,24567,21898,,WEST VIRGINIA,CANADA
8,2222,SIVAN AYYAN,VICE PRESIDENT,PERMENANT,01-02-2012,450000,35000,23949,18000,,WEST VIRGINIA,CANADA

root@workernode:~# sed -n '5,$p' student.txt

4|ramu|BTech|EEE|2019|ONGOLE|8899773627|25000
5|kumar|BTech|MECH|2021|TIRUPATI| |40000
6|kalyan|BTech|MECH|2021|GUDUR|0861554332|40000
7|komali krisnan|BTech|AIML I| |BUCHI|887665432|55000
8|ravi|BTech|CSE|2021| |998776543|50000


./mytask.sh

echo -e "Enter the table name"
read NAME
echo -e "Creating table please wait..."
sleep 1s

hive -e "create table ${NAME} (sno varchar2(),....) row foramt delimited '|' "



load data
select


=> SORT COmmand:
--------------

3 . SORT Command:
    -------------
To sort the data in File in an ORDER either Ascending/ Descending based on FIELDS , we use SORT command.

syntax:  sort <OPTIONS> <FileName/filepath>

-t "demlimiter"  --> to specify the Delimiter in the GIven File Data.
-k "number"      --> to specify the COLUMN/FIELD number in the given file data.
-r               --> to see a REVERSE Sort.. that is DESCENDING.
-n               --> to EXTEND Default 1st Digit Sort behaviour to any no.of Digits.
-u 		 --> REmoves all Duplicates and Holds only Unique Values.


By default sort command works on 1st column's 1st digit.

root@workernode:~/sortdata# 	sort -n -t "," -k 7 -r emp.txt | cut -d "," -f 7
500000
450000
450000
185760
176555
145000
125000
112000
98733
89000
87000
85000
84560
76450
76000
70000


root@workernode:~/sortdata# 	sort -u -t "," -k 13 emp.txt |cut -d "," -f 13

CANADA
INDIA
INIDA
MUMBAI
SANFRANSISCO
UNITED STATES




for {i..n}

for i in 1 2 3 4 5

for ((i=1;i<=n;i++))
do

statements

done

#!/bin/bash

echo -e "Enter the table number..\n"
read n

read -p "Enter the END number:" x

for (( i=1;$i<=$x;i++ ))
do
 echo -e "$n X $i = `expr $n \* $i` \n"
 sleep 1s
done

#END.

sivakumar@workernode:~$ cat usercreate.sh
#!/bin/bash

echo -e "Enter the username \n"
read USER                                                ---> To Make Administration EASY --> we use Scripting.

read -s -p "Enter the password: " PASS

echo -e "Createing user.. please wait..\n"
sleep 1s
useradd -p ${PASS} ${USER}

echo -e "user created Details are: USername: ${USER} Password:${PASS}"

#END


==> Manual Process wihtout scropt

sivakumar@workernode:~$ sudo useradd produser
sivakumar@workernode:~$ sudo passwd produser
Enter new UNIX password:
Retype new UNIX password:
passwd: password updated successfully

sivakumar@workernode:~$ sudo useradd -p India@123 devuser

